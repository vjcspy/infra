apiVersion: apps/v1
kind: Deployment
metadata:
  name: supabase
  labels:
    app.kubernetes.io/name: supabase
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: supabase
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: supabase
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "supabase.serviceAccountName" . }}
      initContainers:
        - name: init-ebs-check
          image: busybox:1.37.0
          command: [ "sh","-c","for i in $(seq 1 5); do echo Checking EBS mount attempt $i; if [ -f /host_ebs_volume/DONT_DELETE ]; then echo OK; exit 0; fi; sleep 10; done; echo FAIL; exit 1" ]
          volumeMounts:
            - name: host-ebs-root
              mountPath: /host_ebs_volume
      containers:
        {{- if .Values.postgres.enabled }}
        - name: postgres
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.postgres.service.port }}
              name: postgres
          env:
          {{ include "supabase.renderServiceEnv" (list . "postgres") | indent 12 }}
          volumeMounts:
            # Realtime migrations
            - name: supabase-root
              mountPath: /docker-entrypoint-initdb.d/migrations/99-realtime.sql
              subPath: db/realtime.sql
              readOnly: true
            # Must be superuser to create event trigger
            - name: supabase-root
              mountPath: /docker-entrypoint-initdb.d/init-scripts/98-webhooks.sql
              subPath: db/webhooks.sql
              readOnly: true
            # Must be superuser to alter reserved role
            - name: supabase-root
              mountPath: /docker-entrypoint-initdb.d/init-scripts/99-roles.sql
              subPath: db/roles.sql
              readOnly: true
            # Initialize the database settings with JWT_SECRET and JWT_EXP
            - name: supabase-root
              mountPath: /docker-entrypoint-initdb.d/init-scripts/99-jwt.sql
              subPath: db/jwt.sql
              readOnly: true
            # PGDATA directory is persisted between restarts
            - name: supabase-root
              mountPath: /var/lib/postgresql/data
              subPath: db/data
            # Changes required for internal supabase data such as _analytics
            - name: supabase-root
              mountPath: /docker-entrypoint-initdb.d/migrations/97-_supabase.sql
              subPath: db/_supabase.sql
              readOnly: true
            # Changes required for Analytics support
            - name: supabase-root
              mountPath: /docker-entrypoint-initdb.d/migrations/99-logs.sql
              subPath: db/logs.sql
              readOnly: true
            # Changes required for Pooler support
            - name: supabase-root
              mountPath: /docker-entrypoint-initdb.d/migrations/99-pooler.sql
              subPath: db/pooler.sql
              readOnly: true
            # Use named volume to persist pgsodium decryption key between restarts
            - name: supabase-root
              mountPath: /etc/postgresql-custom
              subPath: db/config
          {{- with .Values.postgres.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.postgres.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}

        {{- if .Values.supavisor.enabled }}
        - name: supavisor
          image: "{{ .Values.supavisor.image.repository }}:{{ .Values.supavisor.image.tag }}"
          imagePullPolicy: {{ .Values.supavisor.image.pullPolicy }}
          ports:
            - containerPort: 5432
              name: postgres-port
            - containerPort: {{ .Values.supavisor.service.port }}
              name: pooler-port
          command:
            - /bin/sh
            - -c
            - >
              /app/bin/migrate && /app/bin/supavisor eval "$(cat /etc/pooler/pooler.exs)" && /app/bin/server
          env:
          {{ include "supabase.renderServiceEnv" (list . "supavisor") | indent 12 }}
          volumeMounts:
            - name: supabase-root
              mountPath: /etc/pooler/pooler.exs
              subPath: pooler/pooler.exs
              readOnly: true
          {{- with .Values.supavisor.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.supavisor.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}

        {{- if .Values.auth.enabled }}
        - name: auth
          image: "{{ .Values.auth.image.repository }}:{{ .Values.auth.image.tag }}"
          imagePullPolicy: {{ .Values.auth.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.auth.service.port }}
              name: auth-port
          env:
          {{ include "supabase.renderServiceEnv" (list . "auth") | indent 12 }}
          {{- with .Values.auth.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.auth.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}

        {{- if .Values.rest.enabled }}
        - name: rest
          image: "{{ .Values.rest.image.repository }}:{{ .Values.rest.image.tag }}"
          imagePullPolicy: {{ .Values.rest.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.rest.service.port }}
              name: rest-port
          args:
            - postgrest
          env:
          {{ include "supabase.renderServiceEnv" (list . "rest") | indent 12 }}
          {{- with .Values.rest.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.rest.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}

        {{- if .Values.realtime.enabled }}
        - name: realtime
          image: "{{ .Values.realtime.image.repository }}:{{ .Values.realtime.image.tag }}"
          imagePullPolicy: {{ .Values.realtime.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.realtime.service.port }}
              name: realtime-port
          env:
          {{ include "supabase.renderServiceEnv" (list . "realtime") | indent 12 }}
        {{- end }}

        {{- if .Values.storage.enabled }}
        - name: storage
          image: "{{ .Values.storage.image.repository }}:{{ .Values.storage.image.tag }}"
          imagePullPolicy: {{ .Values.storage.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.storage.service.port }}
              name: storage-port
          env:
          {{ include "supabase.renderServiceEnv" (list . "storage") | indent 12 }}
          volumeMounts:
            - name: supabase-root
              mountPath: /var/lib/storage
              subPath: storage
          {{- with .Values.storage.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.storage.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}

        {{- if .Values.imgproxy.enabled }}
        - name: imgproxy
          image: "{{ .Values.imgproxy.image.repository }}:{{ .Values.imgproxy.image.tag }}"
          imagePullPolicy: {{ .Values.imgproxy.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.imgproxy.service.port }}
              name: imgproxy-port
          env:
          {{ include "supabase.renderServiceEnv" (list . "imgproxy") | indent 12 }}
          volumeMounts:
            - name: supabase-root
              mountPath: /var/lib/storage
              subPath: storage
          {{- with .Values.imgproxy.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.imgproxy.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}

        {{- if .Values.meta.enabled }}
        - name: meta
          image: "{{ .Values.meta.image.repository }}:{{ .Values.meta.image.tag }}"
          imagePullPolicy: {{ .Values.meta.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.meta.service.port }}
              name: meta-port
          env:
          {{ include "supabase.renderServiceEnv" (list . "meta") | indent 12 }}
          {{- with .Values.meta.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.meta.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}

        {{- if .Values.functions.enabled }}
        - name: functions
          image: "{{ .Values.functions.image.repository }}:{{ .Values.functions.image.tag }}"
          imagePullPolicy: {{ .Values.functions.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.functions.service.port }}
              name: functions-port
          args:
            - start
            - --main-service
            - /home/deno/functions/main
          env:
          {{ include "supabase.renderServiceEnv" (list . "functions") | indent 12 }}
          volumeMounts:
            - name: supabase-root
              mountPath: /home/deno/functions
              subPath: functions
          {{- with .Values.functions.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.functions.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}

        {{- if .Values.analytics.enabled }}
        - name: analytics
          image: "{{ .Values.analytics.image.repository }}:{{ .Values.analytics.image.tag }}"
          imagePullPolicy: {{ .Values.analytics.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.analytics.service.port }}
              name: analytics-port
          env:
          {{ include "supabase.renderServiceEnv" (list . "analytics") | indent 12 }}
          {{- with .Values.analytics.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.analytics.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}

        {{- if .Values.kong.enabled }}
        - name: kong
          image: "{{ .Values.kong.image.repository }}:{{ .Values.kong.image.tag }}"
          imagePullPolicy: {{ .Values.kong.image.pullPolicy }}
          command:
            - bash
            - -c
            - >
              eval "echo \"$(cat ~/temp.yml)\"" > ~/kong.yml && /docker-entrypoint.sh kong docker-start
          ports:
            - containerPort: {{ .Values.kong.service.ports.http }}
              name: kong-http
            - containerPort: {{ .Values.kong.service.ports.https }}
              name: kong-https
          env:
          {{ include "supabase.renderServiceEnv" (list . "kong") | indent 12 }}
          volumeMounts:
            - name: supabase-root
              mountPath: /home/kong/temp.yml
              subPath: api/kong.yml
              readOnly: true
          {{- with .Values.kong.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.kong.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}

        {{- if .Values.studio.enabled }}
        - name: studio
          image: "{{ .Values.studio.image.repository }}:{{ .Values.studio.image.tag }}"
          imagePullPolicy: {{ .Values.studio.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.studio.service.port }}
              name: studio-port
          env:
          {{ include "supabase.renderServiceEnv" (list . "studio") | indent 12 }}
          {{- with .Values.studio.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.studio.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}

      volumes:
        - name: host-ebs-root
          hostPath:
            path: /mnt/existing_ebs_volume
            type: Directory
        - name: supabase-root
          hostPath:
            path: /mnt/existing_ebs_volume/supabase/volumes
            type: Directory
