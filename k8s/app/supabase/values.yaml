nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
securityContext: {}

global:
  hostPath:
    root: /mnt/existing_ebs_volume/supabase/volumes
  ingressClassName: nginx

ingress:
  kong:
    enabled: true
    host: api.bluestone.systems
    annotations: {}
  studio:
    enabled: true
    host: studio.bluestone.systems
    annotations: {}

postgres:
  enabled: true
  replicaCount: 1
  image:
    repository: supabase/postgres
    tag: 15.8.1.060
    pullPolicy: IfNotPresent
  service:
    port: 5432
  env:
    POSTGRES_DB: app
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: change-me
    JWT_EXPIRY: "3600"
  hostPath:
    data: /mnt/existing_ebs_volume/supabase/volumes/db/data
    config: /mnt/existing_ebs_volume/supabase/volumes/db/config
    init: /mnt/existing_ebs_volume/supabase/volumes/db/init
  resources: {}
  livenessProbe:
    exec:
      command: ["sh","-c","pg_isready -U $POSTGRES_USER -d $POSTGRES_DB -h 127.0.0.1 -p 5432"]
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
  readinessProbe:
    exec:
      command: ["sh","-c","pg_isready -U $POSTGRES_USER -d $POSTGRES_DB -h 127.0.0.1 -p 5432"]
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 5
    failureThreshold: 6

supavisor:
  enabled: true
  replicaCount: 1
  image:
    repository: supabase/supavisor
    tag: 2.5.7
    pullPolicy: IfNotPresent
  service:
    port: 6543
  env:
    DB_POOL_SIZE: "20"
    DATABASE_URL: postgres://postgres:change-me@supabase-postgres:5432/app
  hostPath:
    configFile: /mnt/existing_ebs_volume/supabase/volumes/pooler/pooler.exs
  waitForDb: true
  resources: {}
  livenessProbe:
    tcpSocket: { port: 6543 }
    initialDelaySeconds: 5
    periodSeconds: 10
  readinessProbe:
    tcpSocket: { port: 6543 }
    initialDelaySeconds: 3
    periodSeconds: 5

auth:
  enabled: true
  replicaCount: 1
  image:
    repository: supabase/gotrue
    tag: v2.177.0
    pullPolicy: IfNotPresent
  service:
    port: 9999
  env:
    API_EXTERNAL_URL: https://api.bluestone.systems
    GOTRUE_DB_DRIVER: postgres
    GOTRUE_DB_DATABASE_URL: postgres://supabase_auth_admin:change-me@supabase-postgres:5432/app
    GOTRUE_JWT_SECRET: change-me
  waitForDb: true
  resources: {}
  livenessProbe:
    httpGet: { path: /health, port: 9999 }
    initialDelaySeconds: 10
    periodSeconds: 10
  readinessProbe:
    httpGet: { path: /health, port: 9999 }
    initialDelaySeconds: 5
    periodSeconds: 5

rest:
  enabled: true
  replicaCount: 1
  image:
    repository: postgrest/postgrest
    tag: v12.2.12
    pullPolicy: IfNotPresent
  service:
    port: 3000
  env:
    PGRST_APP_SETTINGS_JWT_EXP: "3600"
    PGRST_DB_URI: postgres://postgres:change-me@supabase-postgres:5432/app
  waitForDb: true
  resources: {}
  livenessProbe:
    tcpSocket: { port: 3000 }
    initialDelaySeconds: 10
    periodSeconds: 10
  readinessProbe:
    tcpSocket: { port: 3000 }
    initialDelaySeconds: 5
    periodSeconds: 5

realtime:
  enabled: true
  replicaCount: 1
  image:
    repository: supabase/realtime
    tag: v2.34.47
    pullPolicy: IfNotPresent
  service:
    port: 4000
  env: {}
  waitForDb: true
  resources: {}
  livenessProbe:
    httpGet: { path: /api/health, port: 4000 }
    initialDelaySeconds: 10
    periodSeconds: 10
  readinessProbe:
    httpGet: { path: /api/health, port: 4000 }
    initialDelaySeconds: 5
    periodSeconds: 5

storage:
  enabled: true
  replicaCount: 1
  image:
    repository: supabase/storage-api
    tag: v1.25.7
    pullPolicy: IfNotPresent
  service:
    port: 5000
  env: {}
  hostPath:
    data: /mnt/existing_ebs_volume/supabase/volumes/storage
  waitForDb: true
  resources: {}
  livenessProbe:
    httpGet: { path: /health, port: 5000 }
    initialDelaySeconds: 10
    periodSeconds: 10
  readinessProbe:
    httpGet: { path: /health, port: 5000 }
    initialDelaySeconds: 5
    periodSeconds: 5

imgproxy:
  enabled: true
  replicaCount: 1
  image:
    repository: darthsim/imgproxy
    tag: v3.8.0
    pullPolicy: IfNotPresent
  service:
    port: 8080
  env: {}
  resources: {}
  livenessProbe:
    tcpSocket: { port: 8080 }
    initialDelaySeconds: 10
    periodSeconds: 10
  readinessProbe:
    tcpSocket: { port: 8080 }
    initialDelaySeconds: 5
    periodSeconds: 5

meta:
  enabled: true
  replicaCount: 1
  image:
    repository: supabase/postgres-meta
    tag: v0.91.0
    pullPolicy: IfNotPresent
  service:
    port: 8080
  env: {}
  waitForDb: true
  resources: {}
  livenessProbe:
    httpGet: { path: /ping, port: 8080 }
    initialDelaySeconds: 10
    periodSeconds: 10
  readinessProbe:
    httpGet: { path: /ping, port: 8080 }
    initialDelaySeconds: 5
    periodSeconds: 5

functions:
  enabled: true
  replicaCount: 1
  image:
    repository: supabase/edge-runtime
    tag: v1.67.4
    pullPolicy: IfNotPresent
  service:
    port: 9000
  env:
    VERIFY_JWT: "true"
  hostPath:
    functions: /mnt/existing_ebs_volume/supabase/volumes/functions
  resources: {}
  livenessProbe:
    tcpSocket: { port: 9000 }
    initialDelaySeconds: 10
    periodSeconds: 10
  readinessProbe:
    tcpSocket: { port: 9000 }
    initialDelaySeconds: 5
    periodSeconds: 5

analytics:
  enabled: true
  replicaCount: 1
  image:
    repository: supabase/logflare
    tag: 1.14.2
    pullPolicy: IfNotPresent
  service:
    port: 4000
  env:
    LOGFLARE_PUBLIC_ACCESS_TOKEN: change-me
    LOGFLARE_PRIVATE_ACCESS_TOKEN: change-me
  resources: {}
  livenessProbe:
    httpGet: { path: /health, port: 4000 }
    initialDelaySeconds: 10
    periodSeconds: 10
  readinessProbe:
    httpGet: { path: /health, port: 4000 }
    initialDelaySeconds: 5
    periodSeconds: 5

kong:
  enabled: true
  replicaCount: 1
  image:
    repository: kong
    tag: 2.8.1
    pullPolicy: IfNotPresent
  service:
    ports:
      http: 8000
      https: 8443
  env:
    KONG_DATABASE: "off"
    KONG_DECLARATIVE_CONFIG: /home/kong/kong.yml
    KONG_PLUGINS: request-transformer,cors,key-auth,acl,basic-auth
    KONG_DNS_ORDER: LAST,A,CNAME
    KONG_NGINX_PROXY_PROXY_BUFFER_SIZE: 160k
    KONG_NGINX_PROXY_PROXY_BUFFERS: "64 160k"
  hostPath:
    kongConfigFile: /mnt/existing_ebs_volume/supabase/volumes/api/kong.yml
  livenessProbe:
    tcpSocket: { port: 8000 }
    initialDelaySeconds: 10
    periodSeconds: 10
  readinessProbe:
    tcpSocket: { port: 8000 }
    initialDelaySeconds: 5
    periodSeconds: 5

studio:
  enabled: true
  replicaCount: 1
  image:
    repository: supabase/studio
    tag: 2025.06.30-sha-6f5982d
    pullPolicy: IfNotPresent
  service:
    port: 3000
  env:
    STUDIO_PG_META_URL: http://supabase-meta:8080
    POSTGRES_PASSWORD: change-me
    SUPABASE_URL: http://supabase-kong:8000
    SUPABASE_PUBLIC_URL: http://api.bluestone.systems
    SUPABASE_ANON_KEY: change-me
    SUPABASE_SERVICE_KEY: change-me
    AUTH_JWT_SECRET: change-me
    NEXT_PUBLIC_ENABLE_LOGS: "true"
  livenessProbe:
    httpGet: { path: /, port: 3000 }
    initialDelaySeconds: 15
    periodSeconds: 10
  readinessProbe:
    httpGet: { path: /, port: 3000 }
    initialDelaySeconds: 5
    periodSeconds: 5
