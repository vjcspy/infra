apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "meta.fullname" . }}-job
  labels:
    {{- include "meta.labels" . | nindent 4 }}
    app.kubernetes.io/component: job
spec:
  serviceName: {{ include "meta.fullname" . }}-job
  replicas: {{ .Values.jobReplicaCount }}
  selector:
    matchLabels:
      {{- include "meta.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: job
  template:
    metadata:
      labels:
        {{- include "meta.labels" . | nindent 8 }}
        app.kubernetes.io/component: job
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "meta.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}

      initContainers:
        - name: set-pod-ordinal
          image: busybox
          command:
            - sh
            - -c
            - |
              HOSTNAME=$(hostname)
              ORDINAL=$(echo $HOSTNAME | rev | cut -d'-' -f1 | rev)
              # Lưu ordinal vào annotations của pod
              kubectl annotate pod $HOSTNAME pod-ordinal=$ORDINAL --overwrite=true

        # First time after restart cluster always fail
        - name: init-container-check-host-mounted-ebs-volume
          image: busybox
          command: [ 'sh', '-c', 'for i in $(seq 1 5); do echo "Checking attempt $i..."; if [ -f /host_ebs_volume/DONT_DELETE ]; then echo "File found, exiting successfully."; exit 0; fi; echo "File not found, retrying..."; sleep 10; done; echo "File not found after 5 attempts, exiting with error."; exit 1' ]
          volumeMounts:
            - name: host-volume
              mountPath: /host_ebs_volume

      containers:
        - name: job
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: {{ .Values.apiContainer.command }}
          args: {{ .Values.apiContainer.args | toJson }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: APP_NAME
              value: job
            - name: NODE_ENV
              value: production
            - name: CRON_ENABLE
              value: "true"
            - name: QUEUE_CONSUMER_ENABLE
              value: "true"
            - name: APP_PORT
              value: "3001"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_ORDINAL
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['pod-ordinal']
          workingDir: {{ .Values.apiContainer.apiWorkingDir }}
          livenessProbe:
            httpGet:
              path: /
              port: 3001
          readinessProbe:
            httpGet:
              path: /
              port: 3001

      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}