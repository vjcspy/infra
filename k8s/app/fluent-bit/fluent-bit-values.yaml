# fluent-bit-values.yaml - Optimized for JSON logs from jmeta-stock

kind: DaemonSet

replicaCount: 1

image:
  repository: cr.fluentbit.io/fluent/fluent-bit
  tag: 4.0.3
  digest:
  pullPolicy: IfNotPresent

testFramework:
  enabled: true
  namespace:
  image:
    repository: busybox
    pullPolicy: Always
    tag: latest
    digest:

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: fluent-bit

rbac:
  create: true
  nodeAccess: false
  eventsAccess: false

podSecurityPolicy:
  create: false
  annotations: {}
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny

openShift:
  enabled: false
  securityContextConstraints:
    create: true
    name: ""
    annotations: {}
    runAsUser:
      type: RunAsAny
    seLinuxContext:
      type: MustRunAs
    existingName: ""

podSecurityContext: {}

hostNetwork: false
dnsPolicy: ClusterFirst

dnsConfig: {}

hostAliases: []

securityContext: {}

service:
  type: ClusterIP
  port: 2020
  internalTrafficPolicy:
  loadBalancerClass:
  loadBalancerSourceRanges: []
  loadBalancerIP:
  labels: {}
  annotations: {}
  externalIPs: []

serviceMonitor:
  enabled: false
  additionalEndpoints: []

prometheusRule:
  enabled: false

dashboards:
  enabled: false
  labelKey: grafana_dashboard
  labelValue: 1
  annotations: {}
  namespace: ""
  deterministicUid: false

lifecycle: {}

livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 5

readinessProbe:
  httpGet:
    path: /api/v1/health
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 5

resources:
  limits:
    memory: 200Mi
    cpu: 100m
  requests:
    memory: 100Mi
    cpu: 50m

ingress:
  enabled: false
  ingressClassName: ""
  annotations: {}
  hosts: []
  extraHosts: []
  tls: []

autoscaling:
  vpa:
    enabled: false
    annotations: {}
    controlledResources: []
    controlledValues:
    maxAllowed: {}
    minAllowed: {}
    updatePolicy:
      updateMode: Auto
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 75
  customRules: []
  behavior: {}

podDisruptionBudget:
  enabled: false
  annotations: {}
  maxUnavailable: "30%"

nodeSelector: {}

tolerations: []

affinity: {}

labels: {}
annotations: {}
podAnnotations: {}
podLabels: {}

minReadySeconds: 0
terminationGracePeriodSeconds: 30

priorityClassName: ""

envWithTpl: []
envFrom: []
extraContainers: []
flush: 1
metricsPort: 2020
extraPorts: []

extraVolumes: []
extraVolumeMounts: []

updateStrategy: {}

existingConfigMap: ""
networkPolicy:
  enabled: false

luaScripts: {}

config:
  service: |
    [SERVICE]
        Daemon Off
        Flush {{ .Values.flush }}
        Log_Level {{ .Values.logLevel }}
        Parsers_File /fluent-bit/etc/parsers.conf
        Parsers_File /fluent-bit/etc/conf/custom_parsers.conf
        HTTP_Server On
        HTTP_Listen 0.0.0.0
        HTTP_Port {{ .Values.metricsPort }}
        Health_Check On
        Storage.path /var/log/flb-storage/
        Storage.sync_rate 1
        Storage.max_chunks_up 128
        Storage.checkpoint On

  inputs: |
    [INPUT]
        Name tail
        Path /var/log/containers/*_jmeta-stock_jmeta*.log
        Parser docker_custom
        Tag kube.jmeta-stock.*
        Mem_Buf_Limit 10MB
        Skip_Long_Lines On
        DB /var/log/flb_kube.db

  filters: |
    [FILTER]
        Name parser
        Match kube.jmeta-stock.*
        Key_Name log
        Parser json_application_log
        Reserve_Data On
        Preserve_Key Off
    
    [FILTER]
        Name kubernetes
        Match kube.jmeta-stock.*
        Merge_Log Off
        Keep_Log Off
        K8S-Logging.Parser Off
        K8S-Logging.Exclude Off
    
    [FILTER]
        Name modify
        Match kube.jmeta-stock.*
        Rename container_runtime_time kubernetes_time
        Remove stream
        Remove logtag

  outputs: |
    [OUTPUT]
        Name stdout
        Match kube.jmeta-stock.*
        Format json_lines
    
    [OUTPUT]
        Name splunk
        Match kube.jmeta-stock.*
        Host splunk-server.splunk-server.svc.cluster.local
        Port 8088
        URI /services/collector
        Header Authorization Bearer 91f4652d-abeb-450b-a9f3-ba3c3c693bfd
        TLS Off
        TLS.Verify Off
        Event_Format json
        Splunk_Send_Records On
        Retry_Limit False

  upstream: {}

  customParsers: |
    [PARSER]
        Name docker_custom
        Format regex
        Regex ^(?<container_runtime_time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<log>.*)$
        Time_Key container_runtime_time
        Time_Format %Y-%m-%dT%H:%M:%S.%L%z
        Time_Keep On
    
    [PARSER]
        Name json_application_log
        Format json
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%L%z
        Time_Keep On

  extraFiles: {}

volumeMounts:
  - name: config
    mountPath: /fluent-bit/etc/conf

daemonSetVolumes:
  - name: varlog
    hostPath:
      path: /var/log
  - name: varlibdockercontainers
    hostPath:
      path: /var/log/containers
      type: DirectoryOrCreate
  - name: etcmachineid
    hostPath:
      path: /etc/machine-id
      type: FileOrCreate
  - name: fluent-bit-storage
    hostPath:
      path: /var/lib/fluent-bit/storage
      type: DirectoryOrCreate

daemonSetVolumeMounts:
  - name: varlog
    mountPath: /var/log
  - name: varlibdockercontainers
    mountPath: /var/log/containers
    readOnly: true
  - name: etcmachineid
    mountPath: /etc/machine-id
    readOnly: true
  - name: fluent-bit-storage
    mountPath: /var/log/flb-storage
    readOnly: false

command:
  - /fluent-bit/bin/fluent-bit

args:
  - --workdir=/fluent-bit/etc
  - --config=/fluent-bit/etc/conf/fluent-bit.conf

initContainers: []

logLevel: info

hotReload:
  enabled: false
  image:
    repository: ghcr.io/jimmidyson/configmap-reload
    tag: v0.14.0
    digest:
    pullPolicy: IfNotPresent
  resources: {}
  extraWatchVolumes: []