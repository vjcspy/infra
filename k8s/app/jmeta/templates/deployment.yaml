apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "jmeta.fullname" . }}
  labels:
    {{- include "jmeta.labels" . | nindent 4 }}
  # redeploy pod every time the pipeline runs
  annotations:
    redeployTimestamp: "{{ now | unixEpoch }}"
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "jmeta.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "jmeta.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "jmeta.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      initContainers:
        - name: init-copy-config
          image: busybox:1.37.0
          command:
            - sh
            - -c
            - |
              echo "[Init] Checking for config file..."
              CONFIG_SRC="/host_ebs_volume/credentials/jmeta/{{ .Values.projectName }}/application.properties"
              CONFIG_DEST="/host_ebs_volume/jmeta/{{ .Values.projectName }}/projects/{{ .Values.projectName }}/build/quarkus-app/config/application.properties"
              if [ -f "$CONFIG_SRC" ]; then
                echo "[Init] Config found, copying..."
                mkdir -p "$(dirname "$CONFIG_DEST")"
                cp "$CONFIG_SRC" "$CONFIG_DEST"
              else
                echo "[Init] Config file not found, skipping."
              fi
          volumeMounts:
            - name: host-volume
              mountPath: /host_ebs_volume

      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
